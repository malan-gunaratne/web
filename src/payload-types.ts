/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    media: Media;
    pages: Page;
    experiences: Experience;
    projects: Project;
    posts: Post;
    topics: Topic;
    stacks: Stack;
  };
  globals: {};
}
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
}
export interface Page {
  id: string;
  title?: string;
  loadTemplate?: 'no' | 'yes';
  template?: (
    | {
        hero?: {
          heading?: string;
          subheading?: string;
          introductionHeading?: string;
          introductionBody?: string;
          pageLinkLabel?: string;
          pageLink?: string | Page;
        };
        posts?: {
          heading?: string;
          subheading?: string;
          viewAllBtn?: string;
        };
        featuredProjects?: {
          heading?: string;
          subheading?: string;
          projects?: string | Project;
          viewAllBtn?: string;
        };
        id?: string;
        blockName?: string;
        blockType: 'homePage';
      }
    | {
        heroContent?: {
          heading?: string;
          subheading?: string;
        };
        milestones?: {
          experiences?: {
            title: string;
            dates: string;
            experience: string | Experience;
            descriptions?: {
              heading: string;
              body: string;
              id?: string;
            }[];
            id?: string;
          }[];
        };
        id?: string;
        blockName?: string;
        blockType: 'experiencesPage';
      }
    | {
        title?: string;
        id?: string;
        blockName?: string;
        blockType: 'projectsPage';
      }
    | {
        title?: string;
        id?: string;
        blockName?: string;
        blockType: 'postsPage';
      }
  )[];
  slug?: string;
  updatedAt: string;
  createdAt: string;
}
export interface Project {
  id: string;
  title?: string;
  description?: string;
  featurePost?: string | Post;
  stack?: string[] | Stack[];
  slug?: string;
  isComplete?: 'no' | 'yes';
  completionDate?: string;
  updatedAt: string;
  createdAt: string;
}
export interface Post {
  id: string;
  title?: string;
  description?: string;
  slug?: string;
  topics?: string[] | Topic[];
  updatedAt: string;
  createdAt: string;
}
export interface Topic {
  id: string;
  title?: string;
  updatedAt: string;
  createdAt: string;
}
export interface Stack {
  id: string;
  icon: string | Media;
  title?: string;
  description?: string;
  updatedAt: string;
  createdAt: string;
}
export interface Experience {
  id: string;
  title?: string;
  featurePost?: string | Post;
  stack?: string[] | Stack[];
  slug?: string;
  startDate?: string;
  endDate?: string;
  updatedAt: string;
  createdAt: string;
}
